name: Publish artifacts to (internal) Gitlab Packages

on:
  push:
    branches: 
      - main
  pull_request:
    types: [ opened, synchronize ]
  workflow_dispatch:

env:
  PRIVATE_MVN_REGISTRY_TOKEN: ${{ secrets.GITLAB_PKG_REGISTRY_TOKEN }}
  PRIVATE_MVN_REGISTRY_URL: ${{ secrets.GITLAB_MAVEN_REGISTRY_URL }}
  PRIVATE_DOCKER_REGISTRY_URL: ${{ secrets.GITLAB_DOCKER_REGISTRY_URL }}

jobs:
  publish:
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-latest
    if: |
      "contains(github.event.head_commit.message, 'release-please--branches--main')" ||
      ${{ github.event_name == 'pull_request' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup JDK 18
        uses: actions/setup-java@v3
        with:
          java-version: '18'
          distribution: 'temurin'
          cache: maven

      - name: Setup depends
        run: |
          pip install yq

      - name: Setup mvn settings.yml
        uses: s4u/maven-settings-action@v2.5.0
        with:
          servers: '[{"id": "private-registry","configuration": {"httpHeaders": {"property": {"name": "PRIVATE-TOKEN","value": "${{ env.PRIVATE_MVN_REGISTRY_TOKEN }}"}}}}]'

      - name: Build
        run: |
          mvn --batch-mode --update-snapshots clean package -DskipTests

      - name: Test
        run: |
          mvn --batch-mode --update-snapshots clean verify -DskipTests

      - name: Set pom.xml version
        run: |
          if [ ${{github.event_name}} == "pull_request" ]
          then
            PR_NUMBER=$(echo $GITHUB_REF | awk -F/ '{ print $3 }')
            CURRENT_VERSION=$(xq -r .project.version pom.xml)
            NEW_VERSION="${CURRENT_VERSION}-PR${PR_NUMBER}"
            xq \
              --arg NEW_VERSION "${NEW_VERSION}" \
              '.project.version = $NEW_VERSION' \
              pom.xml \
              --xml-output > pom.xml.mod && mv pom.xml.mod pom.xml
          fi

      - name: Publish
        run: |
          # Do not push if pom.xml for develop branch doesn't include SNAPSHOT suffix (avoids official releases overwrite)
          BRANCH=${GITHUB_REF##*/}
          CURRENT_VERSION=$(xq -r .project.version pom.xml)
          if [[ "${BRANCH}" == "develop" ]] && ! [[ "${CURRENT_VERSION}" =~ .*-SNAPSHOT$ ]]
          then
            exit 0
          fi

          xq \
            --arg REPOSITORY_ID private-registry \
            --arg REPOSITORY_NAME "${GITHUB_REPOSITORY}" \
            --arg REPOSITORY_URL "${{ env.PRIVATE_MVN_REGISTRY_URL }}" \
            '.project.distributionManagement = { "repository": { "id": $REPOSITORY_ID, "name": $REPOSITORY_NAME , "url": $REPOSITORY_URL } }' \
            pom.xml \
            --xml-output > pom.xml.mod && mv pom.xml.mod pom.xml
          
          mvn --batch-mode --update-snapshots deploy -DskipTests
